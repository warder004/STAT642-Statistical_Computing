#This is the fully tuned model after a bunch of tinkering and some grid searches
from sklearn.cluster import KMeans, AffinityPropagation, MeanShift, SpectralClustering, DBSCAN
from sklearn.metrics import normalized_mutual_info_score

#--------KMEANS---------
K_clt = KMeans(random_state=100)
K_pred = K_clt.fit_predict(Xdata)
K_score = normalized_mutual_info_score(Ydata, K_pred)

#-------AffProp-------
AP_clt = AffinityPropagation(convergence_iter = 1, max_iter = 200).fit(Xdata)
AP_pred = AP_clt.predict(Xdata)
AP_score = normalized_mutual_info_score(Ydata, AP_pred)
    

#------MeanShift-----
MS_clt = MeanShift(bandwidth = 0.24).fit(Xdata)
MS_pred = MS_clt.predict(Xdata)
MS_score = normalized_mutual_info_score(Ydata, MS_pred)


#------DBSCAN------
DB_clt = DBSCAN( min_samples = 8,eps = .35).fit_predict(Xdata)
DB_score = normalized_mutual_info_score(Ydata, DB_clt)

#-------Spectral-------
SC_clt = SpectralClustering(assign_labels= 'discretize').fit_predict(Xdata)
SC_score = normalized_mutual_info_score(Ydata, SC_clt)
